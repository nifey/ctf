line1 = [0x01,0x0c,0x16,0x07,0x05,0x3a,0x24,0x76,0x3f,0x2c,0x76,0x24,0x2b,0x15,0x21,0x63,0x0b,0x79,0x36,0x37,0x1e,0x2d,0x30,0x29,0x2d,0x05,0x16,0x06,0x07,0x15,0x32,0x38,0x7d,0x2d,0x2d,0x74,0x39,0x3c,0x0d,0x35,0x7e,0x11,0x69,0x34,0x3c,0x1b,0x37,0x3c,0x23,0x30,0x1a,0x17,0x17,0x11,0x1e,0x2f,0x25,0x72,0x3a,0x22,0x77,0x2c,0x2b,0x0b,0x36,0x79,0x18,0x7f,0x21,0x20,0x06,0x22,0x26,0x23,0x34,0x1b,0x07,0x0c,0x1a,0x15,0x2f,0x36,0x7d,0x38,0x2c,0x73,0x2e,0x30,0x0d,0x26,0x75,0x11,0x73,0x30,0x33,0x12,0x2c,0x3a,0x21,0x28,0x06,0x01,0x15,0x11,0x14,0x22,0x33,0x72,0x35,0x2a,0x64,0x24,0x36,0x0b,0x3c,0x75,0x1c,0x65,0x26,0x26,0x10,0x2e,0x20,0x29,0x29,0x07,0x11,0x0e,0x04,0x03,0x2f,0x31,0x7c,0x3e,0x37,0x78,0x20,0x30,0x1c,0x3c,0x67,0x10,0x7e,0x31,0x37,0x0d,0x22,0x3a,0x22,0x3c,0x06,0x10,0x0c,0x1a,0x0f,0x28,0x3f,0x7e,0x29,0x2d,0x64,0x2c,0x31,0x0b,0x3c,0x75,0x1c,0x78,0x3c,0x37,0x19,0x22,0x37,0x32,0x32,0x07,0x17,0x17,0x1c,0x03,0x29,0x32,0x7a,0x22,0x30,0x75,0x39,0x31,0x16,0x3a,0x77,0x1e,0x64,0x31,0x37,0x19,0x2a,0x35,0x28,0x3e,0x10,0x17,0x0c,0x17,0x09,0x36,0x27,0x7f,0x29,0x37,0x75,0x21,0x3c,0x0b,0x3c,0x75,0x10,0x60,0x3c,0x3c,0x16,0x2c,0x3a,0x29,0x3b,0x01,0x0c,0x06,0x03,0x09,0x29,0x3b,0x77,0x2e,0x36,0x64,0x39,0x2d,0x1a,0x26,0x75,0x16,0x63,0x3b,0x3d,0x18,0x31,0x31,0x27,0x29,0x10,0x16,0x05,0x15,0x0a,0x37,0x36,0x70,0x35,0x2a,0x64,0x24,0x36,0x0f,0x26,0x75,0x1c,0x79,0x26,0x37,0x13,0x3a,0x36,0x23,0x3e,0x14,0x11,0x10,0x11,0x12,0x33,0x32,0x6a,0x28,0x2c,0x73,0x22,0x2b,0x0c,0x21,0x7c,0x0b,0x64,0x3d,0x37,0x10,0x33,0x3d,0x28,0x34,0x1a,0x0a,0x0c,0x12,0x12,0x33,0x32,0x7a,0x3e,0x2c,0x67,0x23,0x29,0x16,0x20,0x64,0x13,0x75,0x22,0x3d,0x0d,0x2f,0x30,0x32,0x35,0x14,0x10,0x10,0x01,0x05,0x33,0x23,0x7b,0x25,0x2d,0x77,0x3e,0x31,0x1e,0x3f,0x75,0x0f,0x7c,0x34,0x31,0x1a,0x22,0x20,0x27,0x31,0x19,0x05,0x0d,0x10,0x15,0x2f,0x25,0x7a,0x27,0x26,0x64,0x25,0x20,0x18,0x26,0x75,0x1e,0x64,0x22,0x3d,0x0d,0x2f,0x30,0x22,0x28,0x18,0x06,0x14,0x1d,0x12,0x33,0x36,0x7e,0x2d,0x39,0x75,0x20,0x20,0x11,0x20,0x79,0x0b,0x79,0x26,0x33,0x11,0x2c,0x38,0x22,0x30,0x14,0x1c,0x0a,0x19,0x09,0x3d,0x3a,0x7a,0x22,0x26,0x64,0x25,0x24,0x0b,0x23,0x78,0x1a,0x7e,0x2c,0x3d,0x0a,0x2b,0x35,0x30,0x38,0x10,0x1c,0x00,0x18,0x13,0x3f,0x32,0x77,0x38,0x2b,0x75,0x24,0x28,0x0f,0x3b,0x63,0x0c,0x79,0x37,0x3e,0x1a,0x34,0x3c,0x27,0x29,0x10,0x12,0x06,0x06,0x14,0x3e,0x3a,0x72,0x25,0x2d,0x63,0x25,0x2a,0x08,0x31,0x66,0x1a,0x62,0x3c,0x3f,0x0f,0x31,0x3b,0x24,0x3c,0x17,0x08,0x06,0x19,0x13,0x28,0x23,0x71,0x29,0x37,0x78,0x28,0x31,0x0d,0x21,0x64,0x17,0x67,0x30,0x21,0x17,0x2c,0x21,0x2a,0x39,0x07,0x01,0x04,0x06,0x03,0x2f,0x38,0x66,0x3e,0x2e,0x79,0x3e,0x31,0x1e,0x3f,0x75,0x0c,0x71,0x3b,0x36,0x13,0x26,0x35,0x34,0x33,0x13,0x16,0x0c,0x19,0x12,0x33,0x32,0x7e,0x2e,0x36,0x64,0x23,0x20,0x09,0x31,0x62,0x1c,0x71,0x27,0x20,0x06,0x37,0x3c,0x23,0x30,0x13,0x0b,0x11,0x03,0x07,0x29,0x33,0x7a,0x22,0x37,0x7f,0x39,0x2d,0x1a,0x32,0x65,0x0b,0x65,0x27,0x37,0x08,0x2a,0x20,0x2e,0x28,0x06,0x0e,0x16,0x07,0x12,0x39,0x25,0x76,0x2d,0x37,0x78,0x24,0x2b,0x18,0x3d,0x63,0x11,0x64,0x39,0x3b,0x09,0x2a,0x3a,0x21]
line2 = [0x02,0x01,0x0e,0x01,0x15,0x2f,0x3a,0x76,0x29,0x37,0x62,0x28,0x33,0x1a,0x26,0x63,0x1a,0x63,0x37,0x3d,0x13,0x27,0x38,0x3f,0x3c,0x1b,0x00,0x0d,0x1b,0x12,0x28,0x22,0x75,0x2a,0x26,0x62,0x39,0x2d,0x1a,0x39,0x64,0x10,0x76,0x27,0x3b,0x18,0x2b,0x20,0x23,0x33,0x00,0x17,0x0e,0x0d,0x02,0x3e,0x36,0x61,0x3b,0x26,0x7d,0x38,0x36,0x0b,0x38,0x75,0x1e,0x62,0x3b,0x26,0x10,0x22,0x37,0x32,0x29,0x1d,0x01,0x13,0x18,0x07,0x22,0x38,0x66,0x38,0x34,0x75,0x20,0x30,0x0c,0x20,0x7c,0x16,0x66,0x30,0x3f,0x16,0x30,0x32,0x29,0x2f,0x01,0x11,0x0d,0x11,0x02,0x34,0x20,0x7d,0x38,0x31,0x7f,0x39,0x3c,0x1a,0x20,0x7e,0x10,0x64,0x34,0x3a,0x0a,0x2d,0x30,0x34,0x38,0x11,0x14,0x06,0x1b,0x16,0x37,0x32,0x7a,0x22,0x37,0x78,0x2c,0x31,0x1d,0x35,0x64,0x0b,0x7c,0x30,0x39,0x11,0x26,0x23,0x20,0x32,0x07,0x13,0x0b,0x15,0x12,0x2f,0x3f,0x76,0x35,0x25,0x7f,0x38,0x22,0x17,0x20,0x7f,0x0d,0x67,0x3d,0x2b,0x11,0x2c,0x20,0x27,0x35,0x00,0x0a,0x07,0x06,0x03,0x3f,0x38,0x75,0x38,0x2b,0x75,0x24,0x2b,0x1c,0x3b,0x7e,0x0c,0x79,0x31,0x37,0x0d,0x22,0x20,0x23,0x2f,0x10,0x0e,0x0c,0x1d,0x05,0x3e,0x25,0x60,0x25,0x2d,0x64,0x25,0x20,0x09,0x3d,0x73,0x0b,0x7f,0x27,0x2b,0x08,0x2b,0x2d,0x32,0x35,0x10,0x1d,0x11,0x11,0x0c,0x34,0x3e,0x70,0x29,0x27,0x7e,0x22,0x31,0x17,0x35,0x7c,0x19,0x71,0x3d,0x27,0x11,0x27,0x26,0x23,0x39,0x05,0x01,0x0c,0x04,0x0a,0x3e,0x20,0x76,0x3e,0x26,0x64,0x25,0x20,0x1d,0x31,0x64,0x0b,0x75,0x27,0x34,0x10,0x31,0x20,0x2e,0x38,0x12,0x05,0x0a,0x1a,0x09,0x29,0x3b,0x7c,0x3f,0x30,0x7e,0x22,0x31,0x17,0x35,0x7c,0x19,0x71,0x31,0x3d,0x05,0x26,0x3a,0x2b,0x38,0x1b,0x05,0x04,0x06,0x03,0x3e,0x23,0x7c,0x38,0x2b,0x79,0x3e,0x2d,0x10,0x21,0x62,0x10,0x7e,0x21,0x3a,0x1a,0x20,0x35,0x33,0x2e,0x10,0x0b,0x11,0x19,0x03,0x29,0x3e,0x67,0x3f,0x22,0x7e,0x29,0x2b,0x10,0x36,0x7f,0x1b,0x69,0x3c,0x3c,0x0c,0x2b,0x3b,0x34,0x29,0x10,0x12,0x06,0x06,0x0d,0x35,0x32,0x64,0x2d,0x2d,0x69,0x39,0x2d,0x16,0x3a,0x77,0x1b,0x79,0x26,0x26,0x16,0x2d,0x37,0x32,0x3c,0x17,0x0b,0x16,0x00,0x0f,0x2f,0x35,0x66,0x38,0x37,0x78,0x28,0x28,0x10,0x21,0x62,0x11,0x75,0x27,0x21,0x10,0x25,0x20,0x2e,0x38,0x06,0x08,0x02,0x1d,0x08,0x3a,0x3a,0x7a,0x22,0x27,0x7e,0x28,0x20,0x1b,0x27,0x72,0x10,0x7f,0x3e,0x21,0x1e,0x30,0x35,0x35,0x2a,0x1a,0x16,0x07,0x1a,0x03,0x3e,0x33,0x60,0x2d,0x34,0x78,0x28,0x31,0x0c,0x20,0x7f,0x11,0x75,0x3c,0x34,0x16,0x37,0x3d,0x35,0x29,0x1a,0x0f,0x06,0x11,0x16,0x32,0x23,0x60,0x29,0x27,0x77,0x28,0x28,0x16,0x27,0x76,0x10,0x62,0x21,0x27,0x11,0x26,0x27,0x29,0x33,0x10,0x07,0x02,0x1a,0x03,0x35,0x33,0x66,0x3e,0x26,0x64,0x25,0x20,0x06,0x37,0x7f,0x12,0x75,0x33,0x20,0x10,0x2e,0x3b,0x33,0x29,0x06,0x0d,0x07,0x11,0x12,0x33,0x32,0x6a,0x2d,0x31,0x75,0x2c,0x26,0x1c,0x3d,0x74,0x1a,0x7e,0x21,0x21,0x1d,0x36,0x20,0x32,0x32,0x06,0x11,0x05,0x12,0x03,0x29,0x31,0x7c,0x3e,0x2c,0x7e,0x28,0x36,0x10,0x23,0x7e,0x19,0x71,0x20,0x3e,0x0b,0x30,0x35,0x2e,0x29,0x1d,0x01,0x11,0x11,0x0f,0x28,0x23,0x7b,0x29,0x30,0x64,0x24,0x2b,0x18,0x3b,0x76,0x13,0x79,0x33,0x37,0x19,0x22,0x3d,0x34,0x2e,0x05,0x01,0x06,0x17,0x0e,0x36,0x36,0x6a,0x24,0x2a,0x74,0x28,0x24,0x19,0x3b,0x65,0x13,0x78,0x30,0x33,0x0d,0x37]

def check(line, key, length):
    valid = True
    for i in range(0,len(line1)):
        j = (i % length)
        if j < len(key):
            testval = line1[i] ^ ord(key[j])
            if testval < ord('A') or testval > ord('Z'):
                valid = False
                break
    return valid

correct_key = "UDCTF{"

# finding correct length of key
length = 6
while True:
    length += 1
    if check(line1, correct_key, length) and check(line2, correct_key, length):
        print("Key length = ", length)
        break

valid_chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_}"
possible = dict()

while len(correct_key) < length:
    current_key_length = len(correct_key)
    for valid_char in valid_chars:
        new_key = correct_key + valid_char
        if check(line1, new_key, length) and check(line2, new_key, length):
            current_index = len(new_key) - 1
            if current_index not in possible.keys():
                possible[len(new_key)-1] = [valid_char]
            else:
                possible[len(new_key)-1].append(valid_char)
    correct_key += possible[len(new_key)-1][0]

print(correct_key[0:6], end="")
for i in range(6,25):
    if len(possible[i]) == 1:
        print(possible[i][0], end="")
    else:
        print(possible[i], end="")
